<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Blog Title</title>
  <subtitle>This is a longer description about your blog.</subtitle>
  <link href="https://example.com/writing/feed/feed.xml" rel="self" />
  <link href="https://example.com/writing/" />
  <updated>2025-04-03T00:00:00Z</updated>
  <id>https://example.com/writing/</id>
  <author>
    <name>Your Name</name>
  </author>
  <entry>
    <title>Schengen Visa, Benchmarking and Ascona 2025</title>
    <link href="https://example.com/writing/blog/ascona2025/" />
    <updated>2025-04-03T00:00:00Z</updated>
    <id>https://example.com/writing/blog/ascona2025/</id>
    <content type="html">&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/XtVWBmXFti-2000.avif 2000w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/XtVWBmXFti-2000.webp 2000w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/XtVWBmXFti-2000.png&quot; alt=&quot;Ascona 2025 group photo&quot; width=&quot;2000&quot; height=&quot;1167&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Ascona 2025 group photo&lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
&lt;p&gt;In around mid October 2025, Mike (my supervisor) sent me a &lt;a href=&quot;https://x.com/markrobinsonca/status/1845061321076756897&quot;&gt;tweet&lt;/a&gt; that Mark Robinson had posted about Ascona 2025, a conference about benchmarking computational biology methods. &amp;quot;This might interest you,&amp;quot; he said. A conference dedicated to only benchmarking? That&#39;s very niche and new, but also, kind of perfect. I had spent most of the first year of my PhD building a benchmarking tool and performing benchmarking for cell-to-cell communication (Ill refer it as CCC because its to mouthful to say!) inference methods from single-cell RNA sequencing data. And Switzerland? It never crossed my mind to go to Switzerland, so it&#39;d would be a nice experience to travel and to meet like-minded people working on the same kinds of problems. &lt;s&gt;And my first conference and travelling alone? It will be nice to go into the wild and being independent (again)&lt;/s&gt;.&lt;/p&gt;
&lt;h2 id=&quot;benchmarking-and-why-it-matters&quot;&gt;Benchmarking and why it matters&lt;/h2&gt;
&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/MHEzB3s3x--1984.avif 1984w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/MHEzB3s3x--1984.webp 1984w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/MHEzB3s3x--1984.png&quot; alt=&quot;Why benchmarking matters&quot; width=&quot;1984&quot; height=&quot;646&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Why benchmarking matters&lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
&lt;p&gt;If you&#39;ve ever worked in computational biology, or really, in any field with a flood of new methods, you&#39;ll realise why benchmarking is essential. Take my field (CCC) for example. More than a hundred methods have been developed to analyse how cells communicate with each other &lt;a href=&quot;https://pubmed.ncbi.nlm.nih.gov/38238518/&quot;&gt;Armingol et al., 2024&lt;/a&gt;. It&#39;s great that we have that many methods developed, showing how eager people to contribute to the field, but the problem is with so many options, a fundamental question arises: &lt;em&gt;Which one should I use?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you&#39;re developing a computational method as part of your PhD, you&#39;ve probably heard the word &lt;em&gt;benchmarking&lt;/em&gt; more times that you can count. In fact, if you plan to develop your own method, benchmarking is likely the first thing you&#39;ll need to do and pour all your souls into. Why? Because before deciding to build something new, you need to understand what already exists, its strengths, its weaknesses and where the knowledge gaps are.&lt;/p&gt;
&lt;p&gt;In a sea of methods, benchmarking helps us understand which methods perform best under which conditions, what its limitations are and where improvements are needed. Cool right? but the thing is benchmarking is more than just ranking methods. It helps us identify gaps in current knowledge, a scenario where existing methods struggle or fail entirely. If no method performs well in the scenario that we tested, it tells us something important: there&#39;s still a problem that needs solving, which is something I hope to get out of the whole benchmarking exercise I&#39;ve been doing so far.&lt;/p&gt;
&lt;p&gt;Don&#39;t we have so many benchmarking already? I meant don&#39;t authors usually accompany their new methods paper with benchmarking? Yes we do, but don&#39;t you notice that in those papers all of the new methods always perform the best compared to the existing methods. This is an issue of bias, when developers evaluate their own tools, their always a risk of self-assessment trap, a natural tendency to favour the method you&#39;ve spent months (or even years) building. After all, if you&#39;ve poured thousands of hours into developing something, you want it to perform well. In some cases, unconscious bias can creep in, in others, it&#39;s a more deliberate effort to present the method in the best possible light. Either way, independent benchmarking (where researchers compare methods they didn&#39;t develop themselves) helps to counteract this bias. It provides another perspective that makes the evaluation more transparent and rigorous.&lt;/p&gt;
&lt;p&gt;Sounds awesome right? But the thing about benchmarking is that it&#39;s mostly overlooked (&lt;s&gt;okay not really because benchmarking paper is like a citation generator&lt;/s&gt;). As far as I know Ascona 2025 will be the first conference dedicated to solely benchmarking computational methods in biology. Which is interesting because it will also be my first conference attendance outside of the UK as a PhD student. Okay enough with benchmarking introduction and let&#39;s focus on the fun &lt;s&gt;and stressful&lt;/s&gt; part&lt;/p&gt;
&lt;h2 id=&quot;schengen-visa-application&quot;&gt;Schengen visa application&lt;/h2&gt;
&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/yxMVyhJ8Xk-2000.avif 2000w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/yxMVyhJ8Xk-2000.webp 2000w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/yxMVyhJ8Xk-2000.png&quot; alt=&quot;Edinburgh&quot; width=&quot;2000&quot; height=&quot;1167&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Some photos that I took in Edinburgh&lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
As a non-EU international student from the UK, I have to apply for a visa to visit Switzerland since the UK is no longer part of the EU. This isn’t my first time applying for a business visa to an EU country, but it is the first time I’m applying without a travel agency.
&lt;p&gt;I remember seeing a broadcasted email from someone at my institute asking if anyone had recent experience applying for a Schengen visa to attend a conference. I decided to reach out and asked if she had received any responses. She told me that she had, but they were all bad stories (horror music starts). Her main advice was to apply as early as possible. Following her advice, I booked my appointment in December, well ahead of the Ascona 2025 conference (it starts on March 23rd). Surprisingly, there were plenty of available slots in January. Since I would be on vacation to Turkey until the end of January, I chose my appointment for January 29th.&lt;/p&gt;
&lt;p&gt;The challenge was that I live in Aberdeen, and the visa application could only be done in either Edinburgh or London (the bigger cities). There were so many &lt;a href=&quot;https://www.eda.admin.ch/dam/countries/countries-content/india/en/visa/Checklist_Visitor-EN.pdf&quot;&gt;documents to prepare&lt;/a&gt;, from the application form to confirmed flight bookings, all which I need to use my own money first before getting reimbursed by the institute.&lt;/p&gt;
&lt;p&gt;Fast forward to the appointment day, my slot was at 12 PM but because it was my first time visiting Edinburgh I decided that I want to see a little bit of Edinburgh, so I left Aberdeen at 6 AM and arrived in Edinburgh around 9 AM after a three-hour journey. At 12 PM, I arrived at TLScontact office on the Princes Street, only to find out after 20 minutes of waiting that I was in the wrong office. The staff seemed confused at first because I didn’t have the ID number required for the visa application. Then they realised I was applying for a Schengen visa, which had been moved to another office about a 15-minute walk away. Thankfully, they were really helpful and reassured me that being late wouldn’t be an issue, the staff at the other office would understand.&lt;/p&gt;
&lt;p&gt;So, I sprinted and sprinted &lt;s&gt;finally, I can use all those hours spent at ASV for something useful, not just for flexing on social media&lt;/s&gt;. When I arrived, I discovered I was the only person applying for a Swiss visa that day. The lady at the counter was very nice, but there were two small issues. First, the insurance I had purchased didn’t cover Switzerland, but luckily, I could buy the correct one there. Second, I didn’t have my share code with me, so I had to pay an extra £15 to retrieve it, which was mental considering I could have just got it myself in three seconds. The appointment itself was straightforward, though I found it odd that I still had to provide fingerprints despite having done so in the past 52 months. But overall, I was lucky, everyone was kind and helpful. After wrapping up the process, I headed back to the bus station, bought my ticket to Aberdeen, and called it a day.&lt;/p&gt;
&lt;p&gt;Three working days after my appointment, I got an email saying that my application has been approved and my visa has been granted, faster than what I expected. Because I chose the option to have the visa delivered to my flat, I didn&#39;t have to go back to Edinburgh to take it &lt;s&gt;as much as I love going to Edinburgh, that 3-hour Flixbus travel is tiring&lt;/s&gt;.&lt;/p&gt;
&lt;h2 id=&quot;travelling-to-ascona&quot;&gt;Travelling to Ascona&lt;/h2&gt;
&lt;p&gt;It’s the day. Not conference day, but my travel day. The conference starts on the 23rd, but I’m traveling from Aberdeen on the 22nd (the only option if I don’t want to be late). I booked a taxi from my place to the airport. Looking around, I realised I might have overpacked, I brought my XXL when everyone else had small or medium-sized ones. &lt;s&gt;But hey, I had to maximise my baggage allowance, which, funnily enough, turned out to be just 14kg out of the 23kg limit&lt;/s&gt;.&lt;/p&gt;
&lt;p&gt;To get to Ascona, I first had to fly from Aberdeen to London, where I had a brutal 9-hour overnight layover before my next flight to Milan. (You can fly to either Zurich or Milan, but Milan seemed closer and more straightforward.) Initially, I wanted to go out and explore London a bit, but after the event that happened in the morning drained me both mentally and emotionally, I decided to stay at the airport instead. Usually, I’d wait in the departure lounge at Terminal 3, but this time, I went to Caffè Nero. I actually preferred it, much cosier and more comfortable. So there I was, nine hours in Caffè Nero, trying &lt;s&gt;and failing&lt;/s&gt; to sleep, mindlessly scrolling through my phone, and ticking off items from my to-do list. Eventually, I had to transfer to Terminal 5, which was my first time using the airport train instead of the bus.&lt;/p&gt;
&lt;p&gt;When I landed in Milan, I was starving and a little overwhelmed. Since I’ve been living in the UK, an English-speaking country, this was my first time in a place where I didn’t understand the language. (When I was in Turkey, I knew Turkish, so it was fine.) With the help of Google Maps &lt;s&gt;and my last two brain cells&lt;/s&gt;, I started figuring out my journey to Ascona. I hadn’t bought my train tickets yet, so I purchased one at the ticket booth. However, Google Maps kept giving me conflicting information about which station I needed. After some hesitation, I followed the signs and boarded a train to Lugano Paradiso.&lt;/p&gt;
&lt;p&gt;Turns out, I was supposed to validate my ticket before boarding, but I completely forgot. Luckily, no ticket officer came to check. Then, instead of getting off at Lugano Paradiso, my gut feeling told me to get off at Mendrisio instead which turned out to be a great decision. Why? Because while I had roaming and internet access in Italy, it stopped working as soon as I entered Switzerland. Suddenly, I had no internet and no idea how to get to Monte Verita, Ascona. Just as panic was about to set in, I miraculously found an eduroam WiFi network in Mendrisio (lesson learned: always screenshot everything). From Mendrisio, I took another train to Locarno. The journey was filled with breathtaking scenery, the Swiss mountains, lakes, and crisp weather made it feel surreal.&lt;/p&gt;
&lt;p&gt;From Locarno, there was supposed to be a free hotel shuttle bus to Monte Verita, but the ETH website’s map wasn’t exactly clear on where to find it. Then I noticed four people with posters and suitcases wandering around, probably going to the same conference as me and looking for the shuttle, too. So, naturally, I followed them &lt;s&gt;like a stalker&lt;/s&gt;.&lt;/p&gt;
&lt;p&gt;After a while, I realised they might be heading somewhere else, so I went back to the train station. Just then, I spotted the Monte Verita shuttle bus, finally! I hopped on and exchanged my entire Italian vocabulary (“Buongiorno” and “Grazie”) with the driver, who seemed friendly and smiley. Ten minutes later, the four people I had been following showed up. Turns out, they were also looking for the shuttle. We introduced ourselves, they are Barbara, Sophia, Olga, and Pau from Heidelberg, Germany. The five of us rode up the steep, winding roads to Monte Verita, chatting and just enjoying the scenic drive.&lt;/p&gt;
&lt;h2 id=&quot;conference-day-0&quot;&gt;Conference day 0&lt;/h2&gt;
&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/OhneMR3SaO-2000.avif 2000w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/OhneMR3SaO-2000.webp 2000w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/OhneMR3SaO-2000.png&quot; alt=&quot;Why benchmarking matters&quot; width=&quot;2000&quot; height=&quot;1167&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Left to right: view from the stairs, the famous statue and I love Ascona landmark and dinner time &lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
We arrived at around 3 PM (I think we were some of the earliest attendees). After checking in, we were all starving, so we agreed to leave our luggage in our rooms and reunite in 20 minutes to find food. I was staying in the same building as Pau, which was about a 5-minute walk from the main building, while Sophia, Barbara, and Olga were all staying in the main building. When we met up again, Sophia couldn’t join us because she had to prepare for her presentation tomorrow. So, the four of us set off to explore Ascona, chatting about our research along the way.
&lt;p&gt;They mentioned they were from a large computational biology lab with around ~50 people (at the time, I didn’t realise they were from the famous Saez-Rodriguez lab, they kept referring to their PI by his first name, &amp;quot;Julio,&amp;quot; and I usually ignore first names when reading papers). The weather was beautiful, but there were a lot of stairs to climb. We didn’t know where to go for food, but luckily, Olga had Swiss roaming, so we followed her lead. We ended up at Coop (a well-known Swiss supermarket) where we grabbed some snacks. Afterward, we spent some time by the lake, just chatting and taking in the view.&lt;/p&gt;
&lt;p&gt;As the clock neared 5 PM, we decided to go back to get ready for the evening’s welcome event. The official conference wouldn’t start until tomorrow, but tonight was all about introductions and networking. The climb back up was exhausting &lt;s&gt;so many stairs&lt;/s&gt;! Back in my room, I decided to take a quick shower. When I went out of the bathroom, I realised someone else had arrived, it was Alessandro, my roommate. We introduced ourselves, and I found out he was also a second-year PhD student at the University of Lausanne. We chatted for a bit before heading to the drinks and networking event at the main building.&lt;/p&gt;
&lt;p&gt;By the time we arrived, my Heidelberg friends were already there, along with many unfamiliar faces. The event was quite informal (mostly introductions and discussions about our research projects). After that, we moved on to dinner. I ended up sitting at a table with Matt Richie, Christof, Aybüge from Turkey, Alessandro, and Justine, who was Christof’s PhD student (at that point, I didn’t realise Christof was a PI). We were all exhausted after the long day, so once dinner was over, we headed back to our rooms to rest.&lt;/p&gt;
&lt;h2 id=&quot;conference-day-1&quot;&gt;Conference day 1&lt;/h2&gt;
&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/1vPpTWxU__-2000.avif 2000w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/1vPpTWxU__-2000.webp 2000w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/1vPpTWxU__-2000.png&quot; alt=&quot;Some talks from day 1&quot; width=&quot;2000&quot; height=&quot;1167&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Some talks from the first day of conference&lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
Breakfast started from 7:30 AM to 9 AM. During breakfast, I met Yue and Cabiria from the University of Sydney. They were Jean’s (one of the organising committee members) postdoc and PhD students, and they were working on some really interesting projects. I also met Salvador, who I initially assumed was a postdoc, but it turned out he was actually a PI. ~~At this point, I figured it might just be safer to assume that everyone was a PI~~.
&lt;p&gt;After breakfast, we headed to the auditorium, where the day began with an introduction and a short film about Monte Verita. I found the film quite interesting, giving us some historical context about Monte Verita. The talks on the first day were excellent, but the one I enjoyed the most was by Jessica Jingyi Li. At one point in my PhD, I had looked into her group’s work, particularly scDesign, so it was exciting to hear her speak in person. Another highlight for me was Sophia’s talk on kinase activity inference. It reminded me of a discussion I had at the start of my PhD with Mike about incorporating phosphorylation information into our analysis and it turned out to be Sophia&#39;s work.&lt;/p&gt;
&lt;p&gt;The first poster session of the conference took place later that day. I didn’t get the chance to chat with many people, but it was great to see the range of projects everyone was working on. It made me feel less alone in my PhD and benchmarking struggles, seeing others go through similar challenges was oddly reassuring. Afterwards, We had Italian cuisine for dinner. During the meal, I met Jarny from St. Vincent’s Institute. Our conversation took an unexpected turn when I saw the Stemformatics logo on his poster and suddenly realised that we had actually met before, back in 2018 during a phone call for Google Summer of Code. It was a small-world moment that made the evening even more memorable.&lt;/p&gt;
&lt;h2 id=&quot;conference-day-2&quot;&gt;Conference day 2&lt;/h2&gt;
&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/v_LTPOMhgS-2000.avif 2000w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/v_LTPOMhgS-2000.webp 2000w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/v_LTPOMhgS-2000.png&quot; alt=&quot;Images from day 2&quot; width=&quot;2000&quot; height=&quot;1167&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Some talks from the second day of conference and my poster in the middle&lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
I had my breakfast with Alessandro again, and this time, he introduced me to his friend Marion, who was also in her second year. She had started a bit later than Alessandro, but they were coming from the same lab. All of the talks that day were incredibly interesting. I enjoyed seeing how different researchers approach benchmarking from various perspectives. One talk that I waited and liked was Malte&#39;s on **OpenProblems**. I’ve been following their work since the start of my PhD, so it was great to hear more about it in person. It’s exciting to see how the community benchmarking platforms have grown over time. I also appreciate seeing initiatives like Yue’s talk on BenchHub, which I found particularly intriguing. 
&lt;p&gt;What I really enjoyed was hearing different viewpoints and comments, some of which were controversial or a bit different from the mainstream. I think having these senior scientists with these diverse perspectives are required for driving scientific progress, even if they challenge conventional thinking. Later, I had my poster presentation, and some people stopped by to ask about my work. It was a great experience, as I received some valuable, constructive feedbacks.&lt;/p&gt;
&lt;h2 id=&quot;conference-day-3&quot;&gt;Conference day 3&lt;/h2&gt;
&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/iwda5yVa5W-2000.avif 2000w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/iwda5yVa5W-2000.webp 2000w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/iwda5yVa5W-2000.png&quot; alt=&quot;Views from the island&quot; width=&quot;2000&quot; height=&quot;1167&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Some photos I took while on the island&lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
Day 3 was probably one of the most anticipated days of the conference, as it featured the highly awaited excursion to the Brissago Islands on Lake Maggiore. We also had some fantastic talks and a panel discussion lined up. One talk I was particularly looking forward to was Gregory Grant&#39;s on &quot;Addressing the Harsh Realities of Omics Benchmarking.&quot; I had enjoyed reading his paper on the challenges and best practices in omics benchmarking, so I was excited to hear him speak in person.
&lt;p&gt;The panel discussion was interactive and engaging, where the panelists and the audience discussed the different aspects of benchmarking from the challenges and how they see the future of benchmarking. After the talks, we had lunch, and then it was time to get ready for the island excursion. Unfortunately, Alessandro had to leave because he had his 2nd-year evaluation on Monday, and we didn’t get the chance to say goodbye. We did email each other afterward, and hopefully, we’ll meet again at ISMB/ECCB 2025.&lt;/p&gt;
&lt;p&gt;To get to the ferry, we had to take the stairs down from Monte Verita to the harbour. The weather was perfect, a mix of sun, clouds and not too cold, which made the walk pleasant. The Brissago Islands were breathtakingly beautiful, especially the botanical garden, which had plants from various continents around the world. The local tour guide was not only knowledgeable but also hilarious, making the tour entertaining. The views from the island were breathtakingly stunning.&lt;/p&gt;
&lt;p&gt;We had our dinner at the hotel in the island. I had the chance to sit with Jarny, his students, Christof, Morritz, and Mark Robinson himself. The conversation was lively, with discussions about how food in Australia is superior to other places, something that sparked a lot of opinions! Morritz also shared that a few months ago he had spent four weeks in Indonesia recently because he loved to dive. We returned to Monte Verita around 9 PM, taking a bus from Ascona. It had been a long but incredibly fun and rewarding day, filled with beautiful sights, great conversations, and unforgettable experiences. It was exhausting but I think it was worth it.&lt;/p&gt;
&lt;h2 id=&quot;conference-final-day&quot;&gt;Conference final day&lt;/h2&gt;
&lt;figure&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/wVEk_mmLAk-2000.avif 2000w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/writing/blog/ascona2025/wVEk_mmLAk-2000.webp 2000w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/writing/blog/ascona2025/wVEk_mmLAk-2000.png&quot; alt=&quot;Closing speech from Mark&quot; width=&quot;2000&quot; height=&quot;1167&quot;&gt;&lt;/picture&gt;
  &lt;span style=&quot;text-align:center; font-size: 0.75em;&quot;&gt;&lt;figcaption&gt;Closing speech from Mark&lt;/figcaption&gt;&lt;/span&gt;
&lt;/figure&gt;
The last day of the conference had arrived. I initially thought to wake up early and go to the nearest Coop, which was a 20-minute walk away, to get some chocolates for my friends in the UK. However, time was too tight and if I wanted to attend all the sessions, I had to be really quick. In the end, I gave up on that idea and instead had my breakfast. The breakfast room was quieter than the usual, either everyone was still exhausted from the excursion the day before or it was just the usual gloom that comes with the final day of a conference.
&lt;p&gt;Despite that, we still had some great and engaging talks. I even got to be the mic runner for one of the sessions, where Mark was the chair. It was a fun experience and a nice way to wrap up the scientific part of the event. After the last session, we had lunch and started saying our goodbyes. I had to leave early from lunch because, apparently, I was the only one who hadn’t checked out of my room yet. I had booked the shuttle bus at 13:50, so I boarded it along with Hakime, Aybuge, Thomas, Olga, and Jarny. The ride was pleasant, and I spent most of it speaking Turkish with Hakime and Aybuge.&lt;/p&gt;
&lt;p&gt;Once we arrived at the station we said our final goodbyes. Before leaving, I quickly went to the nearest mini market to pick up some Swiss snacks for my friends in the UK. Then, got my ticket, took my trains and headed back to Milan, where I would catch my flight. Just like on my way to the conference, I had another 9-hour layover in London, so I ended up sleeping in Caffè Nero again. It was exhausting, but looking back at everything, the amazing talks, the new friendships, and the incredible experiences, it was all absolutely worth it.&lt;/p&gt;
&lt;h2 id=&quot;my-take-aways&quot;&gt;My Take aways&lt;/h2&gt;
&lt;p&gt;I really enjoyed the whole conference! I liked the size of it, not too small, not too big, so you were able to get to know people and learn about their work. Everyone was nice and welcoming, which made the experience even better. The talks were interesting, and I picked up so many insights that I can incorporate into my benCCChmarker project.&lt;/p&gt;
&lt;p&gt;The interactive panel discussion was a highlight for me. It was great to hear different perspectives and have the audience actively participate in the conversation. The food was also really good, at least for my taste. And one funny observation, I don’t think I’ve ever seen so many MacBooks in one room at the same time!&lt;/p&gt;
&lt;p&gt;Would I want to attend another benchmarking conference? Definitely, if I’m still working on benchmarking. Ascona was a beautiful place for a conference, and beyond the scientific discussions, I met so many amazing people, including some familiar faces from past events. It really made me realise just how small the scientific community can be.&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;I would like to acknowledge the University of Aberdeen Development Trust for funding my PhD and making this conference travel possible. I am also grateful to the Ascona 2025 Organising Committee for granting me the Travel Grant.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Singularity on Mac, Reproducible Research and Lesson Learned</title>
    <link href="https://example.com/writing/blog/singularity-on-mac/" />
    <updated>2025-03-03T00:00:00Z</updated>
    <id>https://example.com/writing/blog/singularity-on-mac/</id>
    <content type="html">&lt;p&gt;Remember the time when you want to install multiple software to reproduce someone else&#39;s research? What does it remind you of? Pain? Exhaustion from hours of Googling and troubleshooting? Only to face the famous &amp;quot;version compatibility&amp;quot; issues even after you&#39;re sure everything right according to the tutorial. Ah, the joys of science and its ever-looming &amp;quot;reproducibility crisis&amp;quot;!&lt;/p&gt;
&lt;p&gt;Luckily we have containerisation technology these days! As written on the &lt;a href=&quot;https://www.ibm.com/topics/containerization&quot;&gt;IBM website&lt;/a&gt; &amp;quot;Containerisation is the packaging of software code with just the operating system (OS) libraries and dependencies required to run the code to create a single lightweight executable—called a container—that runs consistently on any infrastructure.&amp;quot;.&lt;/p&gt;
&lt;p&gt;Started as a way to make the deployment process easier, containerisation has emerged as a valuable tool for ensuring reproducible research, so instead of letting the user install the software themselves and make them find the scripts (stored don&#39;t know where), giving them this so called &#39;container&#39; streamline this process.&lt;/p&gt;
&lt;p&gt;Docker and Singularity are among the most popular containerisation platform (Well technically Docker is more popular, haven&#39;t heard of Singularity till my PI mentioned it). However since I&#39;m largely working with HPC environments, Singularity is preferred as it&#39;s designed for such purpose and more importantly it&#39;s open-source (Long live open-source!).&lt;/p&gt;
&lt;p&gt;Singularity is built for Linux, so you have another problem if you&#39;re using Windows or Mac, in which you have to use virtual machine (VM) to run it. In this post, I&#39;m going to share my experience dealing with Singularity on my Mac, from installing to building a singularity image file (&lt;code&gt;.sif&lt;/code&gt;, end-product, the thing that you share to other people for reproducible research) and the lessons that I learned. So let&#39;s dive in.&lt;/p&gt;
&lt;p&gt;As I said, since Singularity is primarily created for Linux, Mac users need to use virtual machines. Several options exist to create virtual machines on Mac, including &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;, &lt;a href=&quot;https://lima-vm.io/&quot;&gt;Lima&lt;/a&gt; &lt;a href=&quot;https://orbstack.dev/%5D&quot;&gt;OrbStack&lt;/a&gt; (which unfortunately is not very open-source). In my case I&#39;m using Lima as I found it to be straightforward and aligned with the &lt;a href=&quot;https://docs.sylabs.io/guides/4.1/admin-guide/installation.html#mac&quot;&gt;Singularity installation guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; if you haven&#39;t had it installed&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ /bin/bash &lt;span class=&quot;token parameter variable&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;
$ &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;echo&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;eval &quot;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&quot;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token environment constant&quot;&gt;$HOME&lt;/span&gt;/.profile
$ &lt;span class=&quot;token builtin class-name&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;/home/linuxbrew/.linuxbrew/bin/brew shellenv&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install Lima&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ brew &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; lima&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running lima is pretty straightforward and it comes with &lt;a href=&quot;https://lima-vm.io/docs/templates/&quot;&gt;various distros&lt;/a&gt; that you can use. In this case we&#39;re going to use the default &lt;a href=&quot;https://raw.githubusercontent.com/sylabs/singularity/main/examples/lima/singularity-ce.yml&quot;&gt;singularity-ce.yml&lt;/a&gt; template that is provided in the docs.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# SingularityCE on Alma Linux 9&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# &lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Usage:&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#   $ limactl start ./singularity-ce.yml&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#   $ limactl shell singularity-ce singularity run library://alpine&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/AlmaLinux-9-GenericCloud-latest.x86_64.qcow2&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;x86_64&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://repo.almalinux.org/almalinux/9/cloud/aarch64/images/AlmaLinux-9-GenericCloud-latest.aarch64.qcow2&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;aarch64&quot;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;mounts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;~&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/tmp/lima&quot;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;containerd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;provision&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; system
  &lt;span class=&quot;token key atrule&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
    #!/bin/bash
    set -eux -o pipefail
    dnf -y install --enablerepo=epel singularity-ce squashfs-tools-ng&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;probes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
    #!/bin/bash
    set -eux -o pipefail
    if ! timeout 30s bash -c &quot;until command -v singularity &gt;/dev/null 2&gt;&amp;amp;1; do sleep 3; done&quot;; then
      echo &gt;&amp;amp;2 &quot;singularity is not installed yet&quot;
      exit 1
    fi&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;hint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; See &quot;/var/log/cloud&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;init&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;output.log&quot; in the guest

&lt;span class=&quot;token key atrule&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
  To run `singularity` inside your lima VM:
    $ limactl shell  singularity run library://alpine&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;TLDR; It builds an AlmaLinux and Singularity installed with it&lt;/p&gt;
&lt;p&gt;You can update the template above to include more options, for example since the default will only spare 4gb of memory adding &lt;code&gt;memory: &amp;quot;8GiB&amp;quot;&lt;/code&gt; will spare 8 instead of 4, adding &lt;code&gt;writable&lt;/code&gt; options below the mount points will let you write files in those locations (do it at your own risk, also mind that if &lt;code&gt;writable&lt;/code&gt; not being set to &lt;code&gt;true&lt;/code&gt; the files in the mounted directory become &lt;code&gt;read-only&lt;/code&gt;)&lt;/p&gt;
&lt;pre class=&quot;language-yaml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8GiB&quot;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;mounts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;~&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/tmp/lima&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;running the command below will start your lima vm (Select &lt;code&gt;Proceed with the current configuration option&lt;/code&gt; when prompted)&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ limactl start ./singularity-ce.yml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you run the command below, you will see that your &lt;code&gt;singularity-ce&lt;/code&gt; instance is already running&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ limactl list&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To stop and remove/delete the instance you can use the following command respectively&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ limactl stop singularity-ce
$ limactl remove singularity-ce
$ limactl delete singularity-ce
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we got our &lt;code&gt;singularity-ce&lt;/code&gt; running, next step is to create the singularity container, let&#39;s say I want to create container that contains softwares from different programming language. The command below will let you enter the VM interactively&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ limactl shell singularity-ce
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;user@lima-singularity-ce&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also directly run singularity, for example the command below will run the Alpine Linux image from the Sylabs cloud library&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ limactl shell singularity-ce singularity run library://alpine&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since we will be creating the Singularity container image ourselves, we won&#39;t be downloading it from the Sylabs cloud library but instead we will write something called &lt;code&gt;.def&lt;/code&gt; file. &lt;code&gt;.def&lt;/code&gt; file or definition file is a recipe to build container image with Singularity, it&#39;s just a Singularity headers and bunch of shell commands that will be executed to create the image container. This guides from &lt;a href=&quot;https://docs.sylabs.io/guides/latest/user-guide/definition_files.html&quot;&gt;Singularity docs&lt;/a&gt; is very helpful in explaining what we can put in the &lt;code&gt;.def&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Below is a minimal script to create a container with &lt;code&gt;pandas&lt;/code&gt; and &lt;code&gt;seaborn&lt;/code&gt; installed&lt;/p&gt;
&lt;p&gt;&lt;code&gt;test.def&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;language-def&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-def&quot;&gt;Bootstrap: docker
From: ubuntu:22.04

%files
	/Users/hariesramdhani/Documents/requirements.txt /requirements.txt

%post
	export DEBIAN_FRONTEND=noninteractive
	
	apt-get clean all &amp;&amp; &#92;
	apt-get update &amp;&amp; &#92;
	apt-get upgrade -y &amp;&amp; &#92;
	apt-get install -y &#92;
	autoconf &#92;
	autogen &#92;
	build-essential &#92;
	curl &#92;
	libbz2-dev &#92;
	libcurl4-openssl-dev &#92;
	libssl-dev &#92;
	libxml2-dev &#92;
	zlib1g-dev &#92;
	python3-dev &#92;
	python3-pip

	pip install -r /requirements.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;/Users/hariesramdhani/Documents/requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;pandas
seaborn&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create image from the above &lt;code&gt;.def&lt;/code&gt; file, all you have to do is run the following command (make sure you already activated the interactive mode, notice the &lt;code&gt;[user@lima-singularity-ce]&lt;/code&gt; before the $)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[user@lima-singularity-ce]$ singularity build --fakeroot test.sif test.def
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The command below build the &lt;code&gt;test.sif&lt;/code&gt; from the &lt;code&gt;test.def&lt;/code&gt; and you either need to run it as &lt;code&gt;sudo&lt;/code&gt; or using the &lt;code&gt;--fakeroot&lt;/code&gt; argument. Usually it fails when I&#39;m using &lt;code&gt;sudo&lt;/code&gt;, this is why I&#39;m using &lt;code&gt;--fakeroot&lt;/code&gt;. The &lt;code&gt;.sif&lt;/code&gt; file will appear once you successfully build it.&lt;/p&gt;
&lt;p&gt;Well it seems easy and straightforward, doesn&#39;t it? It does, but in practice, it can be more complicated when you try to build a more complex system, like for example my &lt;code&gt;.def&lt;/code&gt; file will contain different softwares from different programming language different way to install and &amp;quot;different&amp;quot; everything on an ARM64 M2 Macbook. Here I am sharing the lessons I learned when building singularity image for my project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My ARM != Your AMD&lt;/strong&gt;
Mac transitioned to Apple silicon which means the CPU architecture of your Macbook M series is ARM64. Why is this information important? The thing with Singularity is that it&#39;s not architecture agnostic, so when you build your singularity image file on your Mac (ARM64) and try to run it on an AMD64 HPC you will get the following error;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ singularity run test.sif
FATAL:   could not open image /path/to/dir/test.sif: the image&#39;s architecture (arm64) could not run on the host&#39;s (amd64)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can&#39;t we just the create the Alpine Linux on our Lima VM to be AMD64 in the first place? Yes, technically by adding the &lt;code&gt;arch&lt;/code&gt; parameter and set it to &lt;code&gt;x86_64&lt;/code&gt; we will make our Lima VM architecture to be AMD64.&lt;/p&gt;
&lt;pre class=&quot;language-yaml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;x86_64&quot;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/AlmaLinux-9-GenericCloud-latest.x86_64.qcow2&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;x86_64&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This sounds straightforward and expected to be working but it didn&#39;t for me, but luckily after some hacking here and there I found a getaway! What I did for my case was to build an Ubuntu vm then install Singularity inside it.&lt;/p&gt;
&lt;p&gt;Can simply create a new instance using the default &lt;code&gt;ubuntu-lts&lt;/code&gt; and when prompted with option don&#39;t forget to update the yaml file&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ limactl start ubuntu-lts&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the default editor is vim, press &lt;code&gt;i&lt;/code&gt; to insert, edit it to add the following and &lt;code&gt;esc&lt;/code&gt; followed &lt;code&gt;w+q&lt;/code&gt; and &lt;code&gt;enter&lt;/code&gt; to save&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Change the architecture&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;x86_64&quot;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Upgrade the memory&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8GiB&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;mounts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Make the mounted point writable&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;~&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/tmp/lima&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It may take more time than the usual to create the instance (most likely because of the different architecture). Once you&#39;re done, enter the interactive mode to install singularity.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ singularity shell ubuntu-lts&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And run the following code to install Singularity and its dependencies, change the GO version (&lt;code&gt;1.13.15&lt;/code&gt;) and Singularity version (&lt;code&gt;v3.6.3&lt;/code&gt;) according to your liking, as seen in the &lt;a href=&quot;https://github.com/apptainer/singularity/issues/5099#issuecomment-814563244&quot;&gt;installation guide&lt;/a&gt;)&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; update &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; build-essential &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
libseccomp-dev pkg-config squashfs-tools cryptsetup

&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-r&lt;/span&gt; /usr/local/go

&lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1.13&lt;/span&gt;.15 &lt;span class=&quot;token assign-left variable&quot;&gt;OS&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;linux &lt;span class=&quot;token assign-left variable&quot;&gt;ARCH&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;amd64  &lt;span class=&quot;token comment&quot;&gt;# change this as you need&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-O&lt;/span&gt; /tmp/go&lt;span class=&quot;token variable&quot;&gt;${VERSION}&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;${OS}&lt;/span&gt;-&lt;span class=&quot;token variable&quot;&gt;${ARCH}&lt;/span&gt;.tar.gz https://dl.google.com/go/go&lt;span class=&quot;token variable&quot;&gt;${VERSION}&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;${OS}&lt;/span&gt;-&lt;span class=&quot;token variable&quot;&gt;${ARCH}&lt;/span&gt;.tar.gz &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-C&lt;/span&gt; /usr/local &lt;span class=&quot;token parameter variable&quot;&gt;-xzf&lt;/span&gt; /tmp/go&lt;span class=&quot;token variable&quot;&gt;${VERSION}&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;${OS}&lt;/span&gt;-&lt;span class=&quot;token variable&quot;&gt;${ARCH}&lt;/span&gt;.tar.gz

&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;export GOPATH=${HOME}/go&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.bashrc &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.bashrc &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; ~/.bashrc

&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-sfL&lt;/span&gt; https://install.goreleaser.com/github.com/golangci/golangci-lint.sh &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-s&lt;/span&gt; -- &lt;span class=&quot;token parameter variable&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;go &lt;span class=&quot;token function&quot;&gt;env&lt;/span&gt; GOPATH&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;/bin v1.21.0

&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;${GOPATH}&lt;/span&gt;/src/github.com/sylabs &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;${GOPATH}&lt;/span&gt;/src/github.com/sylabs &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone https://github.com/sylabs/singularity.git &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; singularity

&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; checkout v3.6.3

&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;${GOPATH}&lt;/span&gt;/src/github.com/sylabs/singularity &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
./mconfig &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ./builddir &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;

singularity version&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I tried to &lt;code&gt;run&lt;/code&gt; the singularity image file that I &lt;code&gt;built&lt;/code&gt; using the above VM on an AMD64 HPC and it works successfully, the &lt;code&gt;build&lt;/code&gt;ing process however takes longer time than usual!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NIH HPC Singularity def files are your friend&lt;/strong&gt;
Whether you want to create a cool, complex def file or need to know how to install some stuff (yes R packages I&#39;m looking at you!), you can always refer to &lt;a href=&quot;https://github.com/NIH-HPC/singularity-def-files/tree/master&quot;&gt;NIH HPC Singularity def files collection&lt;/a&gt; on GitHub (as there aren&#39;t many on Google search), they have it all! Just use the Github advanced search &lt;code&gt;repo:NIH-HPC/singularity-def-files {keyword}&lt;/code&gt; to find specific type of commands, also technically you can find more by searching all over GitHub with the &lt;code&gt;path:*.def &amp;quot;Bootstrap:&amp;quot;&lt;/code&gt; search keyword, but the NIH HPC was suffice for my work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The power  of &lt;code&gt;script&lt;/code&gt;&lt;/strong&gt;
Building singularity (&lt;code&gt;singularity build&lt;/code&gt;) image file with a complex &lt;code&gt;.def&lt;/code&gt; file may take a while (by a while I meant a whole hour) and when you run the command thousands of lines of installation progress appear (Yes R packages I&#39;m looking at you again), troubleshooting can be very hard when you have to scroll through all of those thousands of lines and looking for where the error occurred. Fortunately we have &lt;code&gt;script&lt;/code&gt; command on linux, &lt;code&gt;script {filename_to_save_the_logs}&lt;/code&gt; will record all of the things that are written on the terminal whether it&#39;s an output, an error message or literally anything, it then will save it for you when you run the &lt;code&gt;exit&lt;/code&gt; command. You can then open it using your favourite text editor and &lt;code&gt;CTRL+F&lt;/code&gt; or &lt;code&gt;command+F&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Captain we need more memory&lt;/strong&gt;
Setting up the right &lt;code&gt;memory&lt;/code&gt; is very vital as you don&#39;t want your vm to hang when building your Singularity image files. Happened several times for me before I decided to increase the memory size.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Escaping R and its package dependency hell&lt;/strong&gt;
I had a very hard time installing R and some of its packages, what worked for me was to follow the recipes from &lt;a href=&quot;https://github.com/NIH-HPC/singularity-def-files/tree/master&quot;&gt;NIH HPC Singularity def files collection&lt;/a&gt; that contain the keyword  &lt;code&gt;Rscript&lt;/code&gt;, &lt;code&gt;install_github&lt;/code&gt;.  While the installation worked it didn&#39;t solve the dependencies problem especially when installing the package using &lt;code&gt;install_github&lt;/code&gt; and that package requires Bioconductor packages, earlier today I had a supervisory meeting with Mike (my PI) and he came up with this nice idea to actually scrape the &lt;code&gt;DESCRIPTION&lt;/code&gt; file for each package from the Github repo and install them first before installing the package. I&#39;ll show how I do it on a separate blog post!&lt;/p&gt;
&lt;p&gt;So that concludes my writing, hopefully this can be helpful for all of the researchers that are going to the same thing.&lt;/p&gt;
</content>
  </entry>
</feed>